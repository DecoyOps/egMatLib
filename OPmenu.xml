<?xml version="1.0" encoding="UTF-8"?>
<menuDocument>
    <menu>
        <!--***********************************-->
        <scriptItem id="saveMatToEgLib">
            <context>
                <expression>
<![CDATA[
n = kwargs.get("node", None)
if n.type().name() == "redshift_vopnet":
    return True
elif n.type().name() == "octane_vopnet":
    return True
elif n.type().name() == "materialbuilder":
    return True
elif n.type().name() == "principledshader::2.0":
    return True
elif n.type().name() == "arnold_materialbuilder":
    return True
elif n.type().name() == "subnet":
    return True
elif n.type().name() == "collect":
    return True
return False ]]>
                    </expression>
            </context>
            <labelExpression>
<![CDATA[
n = kwargs.get("node", None)
if n.type().name() == "redshift_vopnet":
    return "Save Material to MatLib"
elif n.type().name() == "octane_vopnet":
    return "Save Material to MatLib"
elif n.type().name() == "materialbuilder":
    return "Save Material to MatLib"
elif n.type().name() == "principledshader::2.0":
    return "Save Material to MatLib"
elif n.type().name() == "arnold_materialbuilder":
    return "Save Material to MatLib"
elif n.type().name() == "subnet":
    return "Save Material to MatLib"
elif n.type().name() == "collect":
    return "Save Material to MatLib"
return "Unavailable in this Context"
]]>
                </labelExpression>
            <scriptCode>
<![CDATA[
n = kwargs.get("node", None)
if n.type().name() == "redshift_vopnet":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "octane_vopnet":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "materialbuilder":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "principledshader::2.0":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "arnold_materialbuilder":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "subnet":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
elif n.type().name() == "collect":
    import MatLibPanel
    MatLibPanel.saveMaterial(n)
else:
    hou.ui.displayMessage('Please select Material Builder Nodes to save Material')

]]>
                </scriptCode>
        </scriptItem>
        <!--***********************************-->
    </menu>
</menuDocument>